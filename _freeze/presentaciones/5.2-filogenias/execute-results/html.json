{
  "hash": "b2f930ee672f5e2c37639aaa24dfb668",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Filogenias en R\"\nauthor: Axel Arango & Fabricio Villalobos & Juliana Herrera\nformat:\n  revealjs:\n    theme: curso_styles.scss\n    chalkboard: true\n    transition: fade\n    progress: true\n    multiplex: false\n    preview-links: true\n    hide-inactive-cursor: true\n    highlight-style: pygments\n    pause: true\neditor: source\nknitr:\n  opts_chunk:\n    dev: \"ragg_png\"\n    retina: 3\n    dpi: 200\nexecute:\n  freeze: auto\n  cache: true\n  echo: true\n---\n\n\n\n## Filogenias en R\n\n\n\n::: {.cell}\n\n:::\n\n\n\nPrimero, ¿Qué es un árbol Filogenético?\n\n. . .\n\n-   Un árbol filogenético es un diagrama que muestra la relación de parentesco entre especies (o taxones)\n\n-   Uno de los formatos más utilizados para representar filogenias es el *Newick*(.tree)\n\n-   El formato Newick es una notación para representar parentescos utilizando paréntesis y comas.\n\n## \n\nSi queremos decir que A y B se parecen más entre ellos que con X, lo anotaríamos así:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\"((A,B),X);\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"((A,B),X);\"\n```\n\n\n:::\n:::\n\n\n\n## \n\nPara que *R* pueda identificar esta notación, se puede usar el paquete `ape`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ape)\nread.tree(text=\"((A,B),X);\") %>% plot()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/newick-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nEl formato Newick es anidado, por lo que podemos explorar la relación entre diferentes grupos. Por ejemplo:\n\nSabemos que los lobos, los coyotes y los zorros pertenecen a Canidae, pero que los lobos y los coyotes son del mismo género\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCanidae <-\"(Vulpes_vulpes,(Canis_lupus,Canis_latrans));\"\nread.tree(text=Canidae) %>% plot()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-2-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nSi agregamos murciélagos:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMammalia <-\"(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans)));\"\nread.tree(text=Mammalia) %>% plot()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/murcis-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nTambién podríamos anexar otros grupos pj: cuervos y zanates. ¿Estos dónde irían?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntetrapoda<-\"((Quiscalus_mexicanus,Corvus_corax),(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans))));\"\n\nread.tree(text=tetrapoda) %>% plot()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/zan-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nSi agregamos una planta, los mamíferos y las aves se anidarían.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEukarya<-\"(Sideroxylon_celastrinum,((Quiscalus_mexicanus,Corvus_corax),(Desmodus_rotundus,(Vulpes_vulpes,(Canis_lupus,Canis_latrans)))));\"\n\nNktree<-read.tree(text=Eukarya) \nplot(Nktree)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/planta-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nEn esta **práctica** haremos uso del paquete `ggtree` para graficar, personalizar y anotar árboles filogenéticos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"ggtree\")\n```\n:::\n\n\n\n\n## Paquetes necesarios:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ape)\nlibrary(ggtree)\nlibrary(deeptime)\nlibrary(tidytree)\nlibrary(ggimage)\nlibrary(geiger)\nlibrary(caper)\nlibrary(TDbook)\nlibrary(here)\n```\n:::\n\n\n\n## ¿Qué insumos utilizaremos?\n\nEn este ejercicio utilizaremos una filogenia con las especies del Orden Siluriformes (peces) a las cuales se le conoce su tipo de migración. Esto es un subset de la Megafilogenia para peces propuesta por Rabosky (2018)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfishdata<-read.table(here(\"data\",\"DataFish.txt\"))\n\nfishtree <-read.tree(here(\"data\",\"treefish.txt\"))\nfishtree$tip.label<-gsub(\"_\", \" \", fishtree$tip.label)\n```\n:::\n\n\n\n## \n\nPodemos visualizar la información rápidamente usando `ape`,\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot(fishtree, show.tip.label=F)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## \n\nAhora graficaremos el mismo árbol utilizando ggtree, el cual sigue una formula idéntica a la de `ggplot`. Nuestro árbol base se llamará **p1**:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1<-ggtree(fishtree,color=\"black\",size=0.5)\nplot(p1)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## \n\nCon **p1,** al igual que con cualquier otro gráfico de `ggplot`, podemos agregar parámetros gráficos para personalizar o agregar anotaciones a nuestra filogenia.\n\nPor ejemplo, podemos cambiar la disposición de la filogenia utilizando el parámetro `layout_`:\n\n## \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1+layout_dendrogram()+\np1+layout_fan()+\np1+layout_circular()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-8-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nTambién podemos cambiar el color del fondo del gráfico\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+  theme_tree(bgcolor=\"skyblue\")\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## Adicionar información a los tips\n\nAgregar nombres a las puntas:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+xlim(NA, 110)+geom_tiplab(size=2,color=\"black\",angle=0)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## \n\nO modificar las puntas:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+geom_tippoint(size=2,color=\"red\",fill=\"black\",shape=21)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## Adicionar información a los nodos\n\nEtiquetas a los nodos:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+geom_nodelab(aes(label=node),size=2,color=\"black\", hjust=-0.6)+\n  geom_nodelab(aes(subset = (node == 109), label = \"*\"),color = \"red\",size=10,hjust=1)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## \n\no formas a los nodos:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+geom_nodelab(aes(label=node),size=2,color=\"black\", hjust=-0.8)+ geom_nodelab(aes(subset = (node == 109), label = \"*\"),color = \"red\",size=10,hjust=1)+\n  geom_nodepoint(size=2,color=\"red\",fill=\"black\",shape=21)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## Escalas temporales\n\nPodemos agregar escalas de tiempo con el paquete `deeptime`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npy<-revts(p1)\n\npy+ geom_tiplab(size=1,color=\"black\",angle=0)+xlim(-100,30)+ylim(-2,70)+coord_geo(abbrv = T,neg=T,skip=NULL,dat=list(\"epochs\"),size=2)\n```\n:::\n\n\n\n\n## \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npy+theme_tree2()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=800}\n:::\n:::\n\n\n\n## \n\nRecordemos que los parámetros son aditivos (con `+` podemos ir agregando uno por uno)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+ layout_fan(angle = 180)+xlim(NA,150)+geom_tiplab(hjust= -0.2,size=2,color=\"black\")+\n  geom_tippoint(size=1,color=\"black\",shape=10)+\n  geom_nodelab(size=1,color=\"black\")+\n  geom_nodepoint(size=2,color=\"red\",alpha=0.3,shape=16)\n```\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Anotaciones en Árboles\n\nPodemos incluir texto adicional en los gráficos,Por ejemplo: quiero seleccionar la parte de la filogenia donde se encuentra las especies de la Familia *Pimelodidae*\n\n## Obtener nodos\n\nPara esto primero debemos encontrar el nodo del ancestro común más reciente para este grupo (Usando un *tibble* y la estructura de `dplyr` es muy fácil).\n\nDespués usando la función `getMRCA()` podemos encontrar el ancestro en común de estas especies\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfishdata$sciname<-row.names(fishdata)\nfishdata$sciname <- gsub(\"_\", \" \", fishdata$sciname)\npimelo<-fishdata %>% filter(Family==\"Pimelodidae\")\n\nnodepimelo<-getMRCA(fishtree,pimelo$sciname)\nnodepimelo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80\n```\n\n\n:::\n:::\n\n\n\n. . .\n\n## \n\nAhora conociendo que el ancestro en común de la familia *Pimelodidae* se encuentra en el nodo 80, puedo utilizar esta información para anotar la filogenia utilizando el parámetro *geom_cladelab*:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+xlim(NA, 110)+ geom_cladelab(node=nodepimelo,label = \"Pimelodidae\",offset=0,barcolor=\"red\",textcolor=\"red\",angle=0, offset.text=0.1)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-20-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## \n\nSi queremos resaltar varias familias:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nSiluridae<-fishdata %>% filter(Family==\"Siluridae\") %>% dplyr::select(sciname)\nnodesiluri<-getMRCA (fishtree,Siluridae$sciname)\nLoricariidae<-fishdata %>% filter(Family==\"Loricariidae\") %>% dplyr::select(sciname)\nnodelori<-getMRCA (fishtree,Loricariidae$sciname)\nBagriidae<-fishdata %>% filter(Family==\"Bagridae\") %>% dplyr::select(sciname)\nnodeBagri<-getMRCA (fishtree,Bagriidae$sciname)\n\nnodesiluri\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 119\n```\n\n\n:::\n\n```{.r .cell-code}\nnodelori\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 128\n```\n\n\n:::\n\n```{.r .cell-code}\nnodeBagri\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 113\n```\n\n\n:::\n:::\n\n\n\n## \n\nAhora podemos jugar con varios parámetros gráficos\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+xlim(NA, 110)+\n  geom_cladelab(node=nodepimelo,label =\"Pimelodidae\",offset=0,barcolor=\"#93C83E\",textcolor=\"#93C83E\",angle=0,offset.text=0.1,fontsize=4)+\n  geom_cladelab(node=nodesiluri,label=\"Siluridae\",offset=0,barcolor=\"#007BA7\",textcolor=\"#007BA7\",angle=0,offset.text=0.1,fontsize=4)+\n  geom_cladelab(node=nodelori,label=\"Loricariidae\",offset=0,barcolor=\"#AD5691\",textcolor=\"#AD5691\",angle=0,offset.text=0.1,fontsize=4)+\n  geom_cladelab(node=nodeBagri,label = \"Bagridae\",offset=0,barcolor=\"#EE3224\",textcolor=\"#EE3224\",angle=0, offset.text=0.1,fontsize=4)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## \n\nO incluso anotar grupos sin ancestro común utilizando el parámetro `geom_strip()`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+xlim(0,120)+\n  geom_strip(\"Neoarius graeffei\",\"Gogo arcuatus\", label=\" Un clado polifilético\", barsize = 2, offset.text = 0.2)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Resaltar\n\nOtro parámetro de anotación muy interesante es *geom_highlight*, el cual nos permite destacar clados, utilizando los nodos de ancestro en común:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+ geom_highlight(node=80,alpha=0.5,fill=\"#93C83E\",type = \"rect\")\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n¿Qué clado es este? ...\n\n## \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1+\n  geom_highlight(node=80,alpha=0.5,fill=\"#93C83E\",type = \"rect\")+\n  geom_cladelab(node=80,label = \"Pimelodiade\",offset=0,barcolor=\"#93C83E\",textcolor=\"#93C83E\", offset.text=0)+\n  xlim(0,110)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Phylopic\n\nEn `ggtree` como en `ggplot` podemos incluir imagenes de recursos en línea como *phylopic* o enriquecerlas con imágenes propias.\n\nPara poder hacer uso de esta función, primero debemos cargar 2 paquetes extra:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"rsvg\")\nlibrary(\"rphylopic\")\n```\n:::\n\n\n\n## \n\nProbemos con una especie de nuestro interes:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nimg <- pick_phylopic(name = \"Ambystoma mexicanum\", n = 1, view = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"575eaa51-6c9b-4d36-9881-b8463c68ebbc\"\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\nPueden explorar esta info: [rphylopic viñeta](https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.14221){preview-link=\"true\"}\n\n## Guardar siluetas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuuid <- get_uuid(name = \"Erythromma najas\")# obtener el identificador unico de la imagen\nimg <- get_phylopic(uuid = uuid,format =\"vector\" ) #obtener imagen\nimg<-recolor_phylopic(img,0.7, \"blue\",fill=\"black\")\nplot(img)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-28-1.png){width=2000}\n:::\n\n```{.r .cell-code}\nsave_phylopic(img = img, path = \"Cetops.png\",\n              width = 500, height = 500)\n```\n:::\n\n\n\n## \n\nPara hacer uso de las imagenes en nuestra filogenia, primero debemos hacer una tabla con los nodos, el nombre de la especie o clado y el phylopic_id.\n\nEn este ejemplo utilizaré los clados *Pimelodidae*, *Siluridae*, *Loricariidae*. \n\nEncontrar los phylopic_id es fácil usando la función `phylopic_uid()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nids<-phylopic_uid(c(\"Phractocephalus hemioliopterus\",\"Siluridae\",\"Ameiurus\",\"Chaetostoma microps\"))\n```\n:::\n\n\n\n## \n\nCon estos ids, ya podemos crear nuestra tabla con los datos necesarios y después gráficarlos:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndt<-data.frame(node=c(nodepimelo,nodesiluri,nodeBagri,nodelori),\n               image=ids$uid,Family=c(\"Pimelodidae\",\"Siluridae\",\"Bagridae\",\"Loricariidae\"),\n               colorss=c(\"#93C83E\",\"#007BA7\",\"#EE3224\",\"#AD5691\"),\n               size=c(0.1,0.1,0.1,0.05))\ndt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  node                                image       Family colorss size\n1   80 6cb85c3d-c455-4e9f-bfa3-fa1f8bc5c0cd  Pimelodidae #93C83E 0.10\n2  119 7cb387d7-9b23-4e5c-a007-2d938339cb8a    Siluridae #007BA7 0.10\n3  113 7a6448e5-09c4-40c8-8378-599d7f974bfe     Bagridae #EE3224 0.10\n4  128 e557aeed-4adf-4953-ad1b-45490d3d7f3d Loricariidae #AD5691 0.05\n```\n\n\n:::\n:::\n\n\n\n## \n\nPor ejemplo: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmy_colors <- setNames(dt$colorss, dt$Family)\n\np1+ylim(-10,80)+geom_cladelab(data = dt,mapping = aes(node = node, label = Family,image = image, color = Family ),geom = \"phylopic\",offset.text=4,  imagesize=dt$size,)+scale_color_manual(values = my_colors)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## \n\nTambién podemos combinar otros parametros que ya conociamos:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np1 + ylim(-10, 80) +geom_cladelab(data = dt,mapping = aes(node = node,label = Family, image = image,color = Family,size = size),\n    geom = \"phylopic\",offset.text = 4 ) +\n  scale_size_identity() +\n  geom_highlight( data = dt,\n    mapping = aes(node = node,\n      fill = Family,colour = Family),type = \"rect\")+scale_color_manual(values = my_colors) +scale_fill_manual(values = my_colors) \n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-32-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np2<-ggtree(fishtree,layout=\"circular\",color=\"black\")\n\np2 + ylim(-10, 80) +geom_cladelab(data = dt,mapping = aes(node = node,label = Family, image = image,color = Family,size = size),\n    geom = \"phylopic\",offset.text =  6) +\n  scale_size_identity() +\n  geom_highlight( data = dt, mapping = aes(node = node,fill = Family,colour = Family),type = \"rect\")+\n  scale_color_manual(values = my_colors) +scale_fill_manual(values = my_colors) \n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-33-1.png){fig-align='center' width=1600}\n:::\n:::\n\n\n\n## Atributos de las especies\n\nTambién se puede usar `ggtree`, para graficar atributos de las especies en la filogenia.\n\nPara hacer esto, primero debemos cargar los atributos, en este caso usaremos la longitud estándar máxima y el hábito migratorio:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfishdata<-read.table(here(\"data\",\"DataFish.txt\"))\nfishdata$label<-gsub(\"_\",\" \",fishdata$label)\n\nhead(fishdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                   Genus.x      Family        Order       Class\nSynodontis_contractus           Synodontis  Mochokidae Siluriformes Actinopteri\nMochokiella_paynei             Mochokiella  Mochokidae Siluriformes Actinopteri\nChiloglanis_asymetricaudalis   Chiloglanis  Mochokidae Siluriformes Actinopteri\nAtopochilus_savorgnani         Atopochilus  Mochokidae Siluriformes Actinopteri\nAmphilius_atesuensis             Amphilius Amphiliidae Siluriformes Actinopteri\nAuchenoglanis_biscutatus     Auchenoglanis Claroteidae Siluriformes Actinopteri\n                                      salinity Length        AnaCat\nSynodontis_contractus               Freshwater    9.7 Non-migratory\nMochokiella_paynei                  Freshwater    3.6 Non-migratory\nChiloglanis_asymetricaudalis        Freshwater    7.6 Non-migratory\nAtopochilus_savorgnani              Freshwater   10.5 Non-migratory\nAmphilius_atesuensis         Freshwater-Marine    9.3 Non-migratory\nAuchenoglanis_biscutatus            Freshwater   54.0 Potamodromous\n                                                    label\nSynodontis_contractus               Synodontis contractus\nMochokiella_paynei                     Mochokiella paynei\nChiloglanis_asymetricaudalis Chiloglanis asymetricaudalis\nAtopochilus_savorgnani             Atopochilus savorgnani\nAmphilius_atesuensis                 Amphilius atesuensis\nAuchenoglanis_biscutatus         Auchenoglanis biscutatus\n```\n\n\n:::\n:::\n\n\n\n## \n\nUna vez cargados los datos, la manera más fácil de utilizarlos es uniendolos a la filogenia usando la función `full_join`, es importante que las especies estén etiquetadas como label, para que la función las reconozca:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatree<-left_join(fishtree,fishdata,by=\"label\")\n```\n:::\n\n\n\n## \n\n¡Listo! Ahora tenemos una filogenia con atributos y podemos graficarlos juntos\n\nPrimero graficaremos los valores continuos de la longitud sobre las puntas del árbol en una escala de colores:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np4<-ggtree(datatree)\n  p4+geom_tippoint(aes(color= Length),size=3)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-36-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\npodemos también personalizar esta escala:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np4+\n  geom_tippoint(aes(color= Length),shape=19,size=3)+scale_colour_gradient(low='yellow', high='red',breaks= c(15,50,100,150,200,300))\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-37-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\n¿Cómo se verían los datos discretos?\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np4+geom_tippoint(aes(color=salinity),shape=15,size=4)+ scale_colour_manual(values = c(\"blue\",\"gray\",\"skyblue\"))\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-38-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\n¿Podemos incluir mas de un dato?\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npx<- p4+\n  scale_color_manual(values = c(\"blue\",\"gray\",\"skyblue\"))+\n  scale_fill_manual(values = c(\"blue\",\"gray\",\"skyblue\"))\n\ndd<-data.frame(id=p4$data$label,value=p4$data$Length)  \n  \npx+ geom_facet(panel=\"Length\",data =dd[1:65,],geom=geom_col, \n               mapping=aes(x=Length,color=salinity,fill=salinity),orientation='y')+\n    theme_tree2()\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-39-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\n`ggtreeExtra`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggtreeExtra)\n\np5<-p4+geom_tippoint(aes(colour=AnaCat))+scale_color_manual(values = c(\"#3d5a80\",\"#98c1d9\",\"#e0fbfc\",\"#293241\",\"#ee6c4d\"))\n\np5+geom_fruit(data=dd[1:65,],\n         geom=geom_bar,\n         mapping = aes(\n                     y=id,\n                     x=value,\n                     group=salinity,\n                     fill=salinity),pwidth=0.38, \n                    orientation=\"y\", \n                    stat=\"identity\",axis.params=list(\n                         axis       = \"x\",\n                         text.size  = 1.8,\n                         hjust      = 1,\n                         vjust      = 0.5,\n                         nbreak     = 3))+ scale_fill_manual(values = c(\"blue\",\"gray\",\"skyblue\"))\n```\n:::\n\n\n\n## \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-41-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\nImágenes propias\n\nEn este ejemplo usaremos las familias *Pimelodidae*,*Doradidae* y *Loricariidae*\n\nPrimero recuperamos un representante de cada grupo, `ape` tiene una función que nos puede ser útil:  `keep.tip()`:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngrouptree<-fishtree %>%\nkeep.tip(c(\"Pimelodus maculatus\", \"Lithodoras dorsalis\",\"Loricariichthys anus\"))\n\ngrouptree$tip.label<-c(\"Pimelodidae\", \"Doraridae\",\"Loricariidae\")\n\np6<-ggtree(grouptree,size=1)+xlim(0,120)+ geom_tiplab(color=\"navyblue\",offset = 0.5,size=5)\np6\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-42-1.png){fig-align='center' width=1200}\n:::\n:::\n\n\n\n## \n\nPara visualizar las imágenes como tips, el archivo, debe tener el nombre exacto del grupo o especie y todas las imaágenes el mismo formato (i.e JPG) :\n\nLas fotos aqui presentadas provienen del Proyecto `cavfish`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np6+ \n  xlim(NA, 150) +\n  geom_tiplab(aes(image=paste0(\"imgs/imagenes/\", label, '.png')),geom=\"image\", offset=3, align=1, size=0.6)+\n  geom_tiplab(geom=\"label\",color=\"black\",offset = 30)\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-43-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n## \n\nHasta ahora hemos usado filogenias conocidas. Pero, ¿Qué pasa si no tengo información de la filogenia del grupo que estoy estudiando?\n\n\n\n\n\n\n\n## \n\n¿Se acuerdan de esta filogenia?\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-45-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nDesde *Open tree of Life*(OTL), podemos obtener una filogenia utilizando las especies de nuestro interes\n\n## \n\nOTL tiene un apquete para R (`rotl`) que podemos usar para obtener filogenias\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"rotl\")\notl_tree<-rotl::tnrs_match_names(c(\"Quiscalus mexicanus\",\"Canis lupus\",\"Corvus corax\",\"Canis latrans\",\"Vulpes vulpes\",\"Desmodus rotundus\",\"Sideroxylon celastrinum\")) %>% \n  pull(ott_id) %>% \n  tol_induced_subtree(label_format=\"name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nProgress [---------------------------------] 0/210 (  0%) ?s\nProgress [==============================] 210/210 (100%)  0s\n                                                            \n```\n\n\n:::\n:::\n\n\n\n## \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_ott<-ggtree(otl_tree)+\n  xlim(0,9)+\n  geom_tiplab(color=\"blue\")\np_ott\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-47-1.png){width=2000}\n:::\n:::\n\n\n\n## \n\nPara la función de `rtol`, **NO** es necesario introducir las especies en orden, ya que ésta recuperará la taxonomia válida y nos arrojará una filogenia.\n\nEn este caso, OTL nos regresó exactamente la misma filogenia que creamos al principio:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np_nk<-ggtree(Nktree)+\n  xlim(0,9)+\n  geom_tiplab(color=\"red\")\n\np_ott/p_nk\n```\n\n::: {.cell-output-display}\n![](5.2-filogenias_files/figure-revealjs/unnamed-chunk-48-1.png){fig-align='center' width=2000}\n:::\n:::\n\n\n\n## \n\nAhora podemos crear nuestras propias figuras usando estos recursos.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}